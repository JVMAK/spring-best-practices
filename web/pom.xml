<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>spring-best-practice</artifactId>
        <groupId>top.rizon.springbestpractice</groupId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>spring-best-practice-web</artifactId>

    <properties>
        <!--是否打包配置文件-->
        <packageConf>false</packageConf>
        <!--打包时配置文件取哪个环境的 打包必传参数-->
        <confEnv>test</confEnv>
        <buildType>tar</buildType>
    </properties>

    <dependencies>
        <dependency>
            <groupId>top.rizon.springbestpractice</groupId>
            <artifactId>common</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>top.rizon.springbestpractice</groupId>
            <artifactId>auth</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>top.rizon.springbestpractice</groupId>
            <artifactId>dao</artifactId>
            <version>${project.version}</version>
        </dependency>
    </dependencies>
    <build>
        <finalName>${project.artifactId}-${project.version}</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.0.0.RELEASE</version>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>create</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <doCheck>false</doCheck>
                    <doUpdate>false</doUpdate>
                    <items>
                        <item>timestamp</item>
                        <item>buildNumber</item>
                    </items>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <goal>read-project-properties</goal>
                            <goal>write-project-properties</goal>
                        </goals>
                        <configuration>
                            <files>
                                <file>${project.basedir}/src/main/resources/application.yml</file>
                            </files>
                            <outputFile>${build.directory}/project.properties</outputFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>exec-maven-plugin</artifactId>
                <groupId>org.codehaus.mojo</groupId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <executable>${basedir}/deploy/package_jar.sh</executable>
                    <arguments>
                        <argument>${packageConf}</argument>
                        <argument>${build.finalName}</argument>
                        <!--port和logDir是读取的配置文件 -->
                        <argument>${port}</argument>
                        <argument>${logDir}</argument>
                        <argument>${confEnv}</argument>
                        <argument>${buildType}</argument>
                    </arguments>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>